{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alext\\\\Desktop\\\\React\\\\React project code along - NET Ninja\\\\dojo-blog\\\\src\\\\Homepage.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport BlogList from './BlogList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Homepage = () => {\n  _s();\n\n  const [blogs, setBlogs] = useState(null);\n  const [isPending, setIsPending] = useState(true);\n  const [error, setError] = useState(null);\n\n  const handleDelete = function (id) {\n    const newBlogs = blogs.filter(blog => id != blog.id);\n    setBlogs(newBlogs);\n  };\n\n  useEffect(() => {\n    setTimeout(() => {\n      fetch('http://localhost:8000/blogs').then(res => {\n        if (!res.ok) {\n          // error coming back from server\n          throw Error('could not fetch the data for that resource');\n        }\n\n        return res.json();\n      }).then(data => {\n        setIsPending(false);\n        setBlogs(data);\n        setError(null);\n      }).catch(err => {\n        // auto catches network / connection error\n        setIsPending(false);\n        setError(err.message);\n      });\n    }, 1000);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home\",\n    children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 23\n    }, this), isPending && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 27\n    }, this), blogs && /*#__PURE__*/_jsxDEV(BlogList, {\n      blogs: blogs,\n      title: 'All Blogs',\n      handleDelete: handleDelete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Homepage, \"044DnhhJhXRCTMVm5Z8RUcohJYM=\");\n\n_c = Homepage;\nexport default Homepage;\n\nvar _c;\n\n$RefreshReg$(_c, \"Homepage\");","map":{"version":3,"sources":["C:/Users/alext/Desktop/React/React project code along - NET Ninja/dojo-blog/src/Homepage.js"],"names":["useState","useEffect","BlogList","Homepage","blogs","setBlogs","isPending","setIsPending","error","setError","handleDelete","id","newBlogs","filter","blog","setTimeout","fetch","then","res","ok","Error","json","data","catch","err","message"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,QAAP,MAAqB,YAArB;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AAEnB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,IAAD,CAAlC;;AAEA,QAAMU,YAAY,GAAG,UAAUC,EAAV,EAAc;AAC/B,UAAMC,QAAQ,GAAGR,KAAK,CAACS,MAAN,CAAaC,IAAI,IAAIH,EAAE,IAAIG,IAAI,CAACH,EAAhC,CAAjB;AACAN,IAAAA,QAAQ,CAACO,QAAD,CAAR;AACH,GAHD;;AAKAX,EAAAA,SAAS,CAAC,MAAM;AACZc,IAAAA,UAAU,CAAC,MAAM;AACbC,MAAAA,KAAK,CAAC,6BAAD,CAAL,CACKC,IADL,CACUC,GAAG,IAAI;AACT,YAAI,CAACA,GAAG,CAACC,EAAT,EAAa;AAAE;AACX,gBAAMC,KAAK,CAAC,4CAAD,CAAX;AACH;;AACD,eAAOF,GAAG,CAACG,IAAJ,EAAP;AACH,OANL,EAOKJ,IAPL,CAOUK,IAAI,IAAI;AACVf,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACAF,QAAAA,QAAQ,CAACiB,IAAD,CAAR;AACAb,QAAAA,QAAQ,CAAC,IAAD,CAAR;AACH,OAXL,EAYKc,KAZL,CAYWC,GAAG,IAAI;AACV;AACAjB,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACAE,QAAAA,QAAQ,CAACe,GAAG,CAACC,OAAL,CAAR;AACH,OAhBL;AAiBH,KAlBS,EAkBP,IAlBO,CAAV;AAmBH,GApBQ,EAoBN,EApBM,CAAT;AAsBA,sBACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,eACKjB,KAAK,iBAAI;AAAA,gBAAMA;AAAN;AAAA;AAAA;AAAA;AAAA,YADd,EAEKF,SAAS,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFlB,EAGKF,KAAK,iBAAI,QAAC,QAAD;AAAU,MAAA,KAAK,EAAEA,KAAjB;AAAwB,MAAA,KAAK,EAAE,WAA/B;AAA4C,MAAA,YAAY,EAAEM;AAA1D;AAAA;AAAA;AAAA;AAAA,YAHd;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH,CAxCD;;GAAMP,Q;;KAAAA,Q;AA0CN,eAAeA,QAAf","sourcesContent":["import { useState, useEffect } from 'react';\r\nimport BlogList from './BlogList';\r\n\r\nconst Homepage = () => {\r\n\r\n    const [blogs, setBlogs] = useState(null);\r\n    const [isPending, setIsPending] = useState(true);\r\n    const [error, setError] = useState(null);\r\n\r\n    const handleDelete = function (id) {\r\n        const newBlogs = blogs.filter(blog => id != blog.id);\r\n        setBlogs(newBlogs);\r\n    }\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            fetch('http://localhost:8000/blogs')\r\n                .then(res => {\r\n                    if (!res.ok) { // error coming back from server\r\n                        throw Error('could not fetch the data for that resource');\r\n                    }\r\n                    return res.json();\r\n                })\r\n                .then(data => {\r\n                    setIsPending(false);\r\n                    setBlogs(data);\r\n                    setError(null);\r\n                })\r\n                .catch(err => {\r\n                    // auto catches network / connection error\r\n                    setIsPending(false);\r\n                    setError(err.message);\r\n                })\r\n        }, 1000);\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"home\">\r\n            {error && <div>{error}</div>}\r\n            {isPending && <div>Loading...</div>}\r\n            {blogs && <BlogList blogs={blogs} title={'All Blogs'} handleDelete={handleDelete} />}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Homepage;"]},"metadata":{},"sourceType":"module"}